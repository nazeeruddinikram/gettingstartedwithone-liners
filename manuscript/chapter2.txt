# awk

AWK is an interpreted programming language designed for text processing and typically used as a data extraction and reporting tool. It is a standard feature of most Unix-like operating systems. 

The AWK language is a data-driven scripting language consisting of a set of actions to be taken against streams of textual data, either run directly on files or used as part of a pipeline, for purposes of extracting or transforming text.

An AWK program is a series of pattern action pairs, written as:

`''condition'' { ''action'' }`

Here are some examples of `awk` in action

###### Extract fields 2, 4, and 5 from foo.txt:

    awk '{print $2,$4,$5}' foo.txt


###### Print each line where the 5th field is equal to ‘abc123’:

    awk '$5 == "abc123"' foo.txt


###### Print each line where the 5th field is not equal to ‘abc123’:

    awk '$5 != "abc123"' foo.txt


###### Print each line whose 7th field matches the regular expression:

    awk '$7  ~ /^[a-f]/' foo.txt


###### Print each line whose 7th field does not match the regular expression:

    awk '$7 !~ /^[a-f]/' foo.txt


###### Get unique entries in foo.txt based on column 1 (takes only the first instance):

    awk '!arr[$2]++' foo.txt


###### Print rows where column 3 is larger than column 5 in foo.txt:

    awk '$3>$5' foo.txt


###### Sum column 1 of foo.txt:

    awk '{sum+=$1} END {print sum}' foo.txt


###### Compute the mean of column 2 from the contents of foo.txt:

    awk '{x+=$2}END{print x/NR}' foo.txt

